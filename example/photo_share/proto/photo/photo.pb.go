// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/photo_share/proto/photo/photo.proto

package photo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-custom/graphql-gateway/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PhotoCategory int32

const (
	PhotoCategory_SELFIE    PhotoCategory = 0
	PhotoCategory_PORTRAIT  PhotoCategory = 1
	PhotoCategory_ACTION    PhotoCategory = 2
	PhotoCategory_LANDSCAPE PhotoCategory = 3
	PhotoCategory_GRAPHIC   PhotoCategory = 4
)

var PhotoCategory_name = map[int32]string{
	0: "SELFIE",
	1: "PORTRAIT",
	2: "ACTION",
	3: "LANDSCAPE",
	4: "GRAPHIC",
}

var PhotoCategory_value = map[string]int32{
	"SELFIE":    0,
	"PORTRAIT":  1,
	"ACTION":    2,
	"LANDSCAPE": 3,
	"GRAPHIC":   4,
}

func (x PhotoCategory) String() string {
	return proto.EnumName(PhotoCategory_name, int32(x))
}

func (PhotoCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3dccad5f52c8e72e, []int{0}
}

type Photo struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url                  string               `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Description          string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Category             PhotoCategory        `protobuf:"varint,5,opt,name=category,proto3,enum=photo.PhotoCategory" json:"category,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Photo) Reset()         { *m = Photo{} }
func (m *Photo) String() string { return proto.CompactTextString(m) }
func (*Photo) ProtoMessage()    {}
func (*Photo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dccad5f52c8e72e, []int{0}
}

func (m *Photo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Photo.Unmarshal(m, b)
}
func (m *Photo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Photo.Marshal(b, m, deterministic)
}
func (m *Photo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Photo.Merge(m, src)
}
func (m *Photo) XXX_Size() int {
	return xxx_messageInfo_Photo.Size(m)
}
func (m *Photo) XXX_DiscardUnknown() {
	xxx_messageInfo_Photo.DiscardUnknown(m)
}

var xxx_messageInfo_Photo proto.InternalMessageInfo

func (m *Photo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Photo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Photo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Photo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Photo) GetCategory() PhotoCategory {
	if m != nil {
		return m.Category
	}
	return PhotoCategory_SELFIE
}

func (m *Photo) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

type TotalPhotosResponse struct {
	Total                int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TotalPhotosResponse) Reset()         { *m = TotalPhotosResponse{} }
func (m *TotalPhotosResponse) String() string { return proto.CompactTextString(m) }
func (*TotalPhotosResponse) ProtoMessage()    {}
func (*TotalPhotosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dccad5f52c8e72e, []int{1}
}

func (m *TotalPhotosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalPhotosResponse.Unmarshal(m, b)
}
func (m *TotalPhotosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalPhotosResponse.Marshal(b, m, deterministic)
}
func (m *TotalPhotosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalPhotosResponse.Merge(m, src)
}
func (m *TotalPhotosResponse) XXX_Size() int {
	return xxx_messageInfo_TotalPhotosResponse.Size(m)
}
func (m *TotalPhotosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalPhotosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TotalPhotosResponse proto.InternalMessageInfo

func (m *TotalPhotosResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type AllPhotosResponse struct {
	Photos               []*Photo `protobuf:"bytes,1,rep,name=photos,proto3" json:"photos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllPhotosResponse) Reset()         { *m = AllPhotosResponse{} }
func (m *AllPhotosResponse) String() string { return proto.CompactTextString(m) }
func (*AllPhotosResponse) ProtoMessage()    {}
func (*AllPhotosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dccad5f52c8e72e, []int{2}
}

func (m *AllPhotosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllPhotosResponse.Unmarshal(m, b)
}
func (m *AllPhotosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllPhotosResponse.Marshal(b, m, deterministic)
}
func (m *AllPhotosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllPhotosResponse.Merge(m, src)
}
func (m *AllPhotosResponse) XXX_Size() int {
	return xxx_messageInfo_AllPhotosResponse.Size(m)
}
func (m *AllPhotosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AllPhotosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AllPhotosResponse proto.InternalMessageInfo

func (m *AllPhotosResponse) GetPhotos() []*Photo {
	if m != nil {
		return m.Photos
	}
	return nil
}

type PhotoRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhotoRequest) Reset()         { *m = PhotoRequest{} }
func (m *PhotoRequest) String() string { return proto.CompactTextString(m) }
func (*PhotoRequest) ProtoMessage()    {}
func (*PhotoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dccad5f52c8e72e, []int{3}
}

func (m *PhotoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhotoRequest.Unmarshal(m, b)
}
func (m *PhotoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhotoRequest.Marshal(b, m, deterministic)
}
func (m *PhotoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoRequest.Merge(m, src)
}
func (m *PhotoRequest) XXX_Size() int {
	return xxx_messageInfo_PhotoRequest.Size(m)
}
func (m *PhotoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoRequest proto.InternalMessageInfo

func (m *PhotoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PhotoResponse struct {
	Photo                *Photo   `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhotoResponse) Reset()         { *m = PhotoResponse{} }
func (m *PhotoResponse) String() string { return proto.CompactTextString(m) }
func (*PhotoResponse) ProtoMessage()    {}
func (*PhotoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dccad5f52c8e72e, []int{4}
}

func (m *PhotoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhotoResponse.Unmarshal(m, b)
}
func (m *PhotoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhotoResponse.Marshal(b, m, deterministic)
}
func (m *PhotoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoResponse.Merge(m, src)
}
func (m *PhotoResponse) XXX_Size() int {
	return xxx_messageInfo_PhotoResponse.Size(m)
}
func (m *PhotoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoResponse proto.InternalMessageInfo

func (m *PhotoResponse) GetPhoto() *Photo {
	if m != nil {
		return m.Photo
	}
	return nil
}

type PostPhotoRequest struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Category             PhotoCategory `protobuf:"varint,2,opt,name=category,proto3,enum=photo.PhotoCategory" json:"category,omitempty"`
	Description          string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PostPhotoRequest) Reset()         { *m = PostPhotoRequest{} }
func (m *PostPhotoRequest) String() string { return proto.CompactTextString(m) }
func (*PostPhotoRequest) ProtoMessage()    {}
func (*PostPhotoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dccad5f52c8e72e, []int{5}
}

func (m *PostPhotoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostPhotoRequest.Unmarshal(m, b)
}
func (m *PostPhotoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostPhotoRequest.Marshal(b, m, deterministic)
}
func (m *PostPhotoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostPhotoRequest.Merge(m, src)
}
func (m *PostPhotoRequest) XXX_Size() int {
	return xxx_messageInfo_PostPhotoRequest.Size(m)
}
func (m *PostPhotoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostPhotoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostPhotoRequest proto.InternalMessageInfo

func (m *PostPhotoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PostPhotoRequest) GetCategory() PhotoCategory {
	if m != nil {
		return m.Category
	}
	return PhotoCategory_SELFIE
}

func (m *PostPhotoRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type TagPhotoRequest struct {
	GithubLogin          string   `protobuf:"bytes,1,opt,name=github_login,json=githubLogin,proto3" json:"github_login,omitempty"`
	PhotoId              string   `protobuf:"bytes,2,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagPhotoRequest) Reset()         { *m = TagPhotoRequest{} }
func (m *TagPhotoRequest) String() string { return proto.CompactTextString(m) }
func (*TagPhotoRequest) ProtoMessage()    {}
func (*TagPhotoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dccad5f52c8e72e, []int{6}
}

func (m *TagPhotoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagPhotoRequest.Unmarshal(m, b)
}
func (m *TagPhotoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagPhotoRequest.Marshal(b, m, deterministic)
}
func (m *TagPhotoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagPhotoRequest.Merge(m, src)
}
func (m *TagPhotoRequest) XXX_Size() int {
	return xxx_messageInfo_TagPhotoRequest.Size(m)
}
func (m *TagPhotoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TagPhotoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TagPhotoRequest proto.InternalMessageInfo

func (m *TagPhotoRequest) GetGithubLogin() string {
	if m != nil {
		return m.GithubLogin
	}
	return ""
}

func (m *TagPhotoRequest) GetPhotoId() string {
	if m != nil {
		return m.PhotoId
	}
	return ""
}

func init() {
	proto.RegisterEnum("photo.PhotoCategory", PhotoCategory_name, PhotoCategory_value)
	proto.RegisterType((*Photo)(nil), "photo.Photo")
	proto.RegisterType((*TotalPhotosResponse)(nil), "photo.TotalPhotosResponse")
	proto.RegisterType((*AllPhotosResponse)(nil), "photo.AllPhotosResponse")
	proto.RegisterType((*PhotoRequest)(nil), "photo.PhotoRequest")
	proto.RegisterType((*PhotoResponse)(nil), "photo.PhotoResponse")
	proto.RegisterType((*PostPhotoRequest)(nil), "photo.PostPhotoRequest")
	proto.RegisterType((*TagPhotoRequest)(nil), "photo.TagPhotoRequest")
}

func init() {
	proto.RegisterFile("example/photo_share/proto/photo/photo.proto", fileDescriptor_3dccad5f52c8e72e)
}

var fileDescriptor_3dccad5f52c8e72e = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x6e, 0xd3, 0x4c,
	0x14, 0xfd, 0x9c, 0x34, 0x7f, 0xd7, 0x69, 0xeb, 0x4e, 0xab, 0x7e, 0xc6, 0x48, 0x10, 0x2c, 0x1e,
	0x22, 0xa2, 0x3a, 0x28, 0xed, 0x0b, 0x4f, 0xc8, 0x0a, 0x01, 0x02, 0x55, 0x1b, 0x5c, 0xbf, 0x57,
	0x53, 0x7b, 0x70, 0x2c, 0xd9, 0x19, 0xd7, 0x9e, 0x00, 0x65, 0x11, 0x2c, 0x22, 0x7b, 0xc8, 0x1a,
	0xd8, 0x16, 0xf2, 0xcc, 0x38, 0x72, 0x5c, 0x22, 0xf1, 0x12, 0xcd, 0x9c, 0x73, 0x73, 0xe6, 0xde,
	0x7b, 0x8e, 0x61, 0x40, 0x7e, 0xe0, 0x38, 0x89, 0xc8, 0x30, 0x99, 0x53, 0x46, 0x6f, 0xb3, 0x39,
	0x4e, 0xc9, 0x30, 0x49, 0x29, 0xa3, 0x02, 0x11, 0xbf, 0x16, 0x47, 0x50, 0x83, 0x5f, 0x8c, 0x8b,
	0x20, 0x64, 0xf3, 0xe5, 0x9d, 0xe5, 0xd1, 0x78, 0x18, 0xa4, 0x89, 0x77, 0xe6, 0x2d, 0x33, 0xc6,
	0xcf, 0x38, 0x99, 0xdf, 0x47, 0x67, 0x01, 0x66, 0xe4, 0x3b, 0x7e, 0x28, 0xee, 0xe2, 0xcf, 0xc6,
	0xd3, 0x80, 0xd2, 0x20, 0x92, 0xe2, 0x77, 0xcb, 0xaf, 0x43, 0x12, 0x27, 0xec, 0x41, 0x92, 0xcf,
	0xab, 0x24, 0x0b, 0x63, 0x92, 0x31, 0x1c, 0x27, 0xa2, 0xc0, 0xfc, 0xad, 0x40, 0x63, 0x96, 0xbf,
	0x8e, 0x0e, 0xa0, 0x16, 0xfa, 0xba, 0xd2, 0x53, 0xfa, 0x1d, 0xa7, 0x16, 0xfa, 0x08, 0xc1, 0xde,
	0x02, 0xc7, 0x44, 0xaf, 0x71, 0x84, 0x9f, 0x91, 0x06, 0xf5, 0x65, 0x1a, 0xe9, 0x75, 0x0e, 0xe5,
	0x47, 0xd4, 0x03, 0xd5, 0x27, 0x99, 0x97, 0x86, 0x09, 0x0b, 0xe9, 0x42, 0xdf, 0xe3, 0x4c, 0x19,
	0x42, 0xaf, 0xa1, 0xed, 0x61, 0x46, 0x02, 0x9a, 0x3e, 0xe8, 0x8d, 0x9e, 0xd2, 0x3f, 0x18, 0x9d,
	0x58, 0x62, 0x78, 0xfe, 0xee, 0x58, 0x72, 0xce, 0xa6, 0x0a, 0x5d, 0x40, 0xcb, 0x4b, 0x09, 0x66,
	0xc4, 0xd7, 0x9b, 0x3d, 0xa5, 0xaf, 0x8e, 0x0c, 0x4b, 0x8c, 0x61, 0x15, 0x63, 0x58, 0x6e, 0x31,
	0x86, 0x53, 0x94, 0x9a, 0x03, 0x38, 0x76, 0x29, 0xc3, 0x11, 0x57, 0xcd, 0x1c, 0x92, 0x25, 0x74,
	0x91, 0x11, 0x74, 0x02, 0x0d, 0x96, 0xc3, 0x7c, 0xb2, 0x86, 0x23, 0x2e, 0xe6, 0x1b, 0x38, 0xb2,
	0xa3, 0x6a, 0xe9, 0x4b, 0x68, 0xf2, 0xc6, 0x32, 0x5d, 0xe9, 0xd5, 0xfb, 0xea, 0xa8, 0x5b, 0xee,
	0xd3, 0x91, 0x9c, 0xf9, 0x0c, 0xba, 0x02, 0x20, 0xf7, 0x4b, 0x92, 0xb1, 0xea, 0xde, 0xcc, 0x73,
	0xd8, 0x97, 0xbc, 0x94, 0x35, 0x41, 0xf8, 0xcb, 0x6b, 0xaa, 0xaa, 0x82, 0x32, 0x7f, 0x82, 0x36,
	0xa3, 0x19, 0xdb, 0x12, 0x2e, 0x0c, 0x50, 0x4a, 0x06, 0x94, 0x97, 0x59, 0xfb, 0xa7, 0x65, 0x56,
	0x0c, 0xaa, 0x3f, 0x32, 0xc8, 0xbc, 0x86, 0x43, 0x17, 0x07, 0x5b, 0x4f, 0xbf, 0x80, 0xae, 0xc8,
	0xe2, 0x6d, 0x44, 0x83, 0x70, 0x21, 0x5b, 0x50, 0x05, 0x76, 0x99, 0x43, 0xe8, 0x09, 0xb4, 0x45,
	0xb4, 0x43, 0x5f, 0x46, 0xa4, 0xc5, 0xef, 0x53, 0xff, 0xd5, 0x17, 0xb9, 0x81, 0xa2, 0x1b, 0x04,
	0xd0, 0xbc, 0x99, 0x5c, 0xbe, 0x9f, 0x4e, 0xb4, 0xff, 0x50, 0x17, 0xda, 0xb3, 0x6b, 0xc7, 0x75,
	0xec, 0xa9, 0xab, 0x29, 0x39, 0x63, 0x8f, 0xdd, 0xe9, 0xf5, 0x95, 0x56, 0x43, 0xfb, 0xd0, 0xb9,
	0xb4, 0xaf, 0xde, 0xdd, 0x8c, 0xed, 0xd9, 0x44, 0xab, 0x23, 0x15, 0x5a, 0x1f, 0x1c, 0x7b, 0xf6,
	0x71, 0x3a, 0xd6, 0xf6, 0x46, 0xbf, 0xea, 0x72, 0xeb, 0x37, 0x24, 0xfd, 0x16, 0x7a, 0x04, 0xb9,
	0xa0, 0x96, 0xdc, 0x46, 0xa7, 0x8f, 0x12, 0x32, 0xc9, 0xbf, 0x02, 0xc3, 0x90, 0xdb, 0xf9, 0x4b,
	0x32, 0xcc, 0xa3, 0xd5, 0x7a, 0xb0, 0x0f, 0x2a, 0x2b, 0xc9, 0x5c, 0x41, 0x67, 0x13, 0x8b, 0x9d,
	0x9a, 0xba, 0xd4, 0x7c, 0x14, 0x20, 0xf3, 0x70, 0xb5, 0x1e, 0xa8, 0xd0, 0xc1, 0x1b, 0x89, 0xb7,
	0xc5, 0xc7, 0x75, 0xbc, 0x65, 0xba, 0xd8, 0xb2, 0x71, 0xb2, 0x0d, 0x4a, 0x11, 0x75, 0xb5, 0x1e,
	0xb4, 0x64, 0x64, 0xd0, 0x67, 0xe8, 0x6c, 0x72, 0x81, 0xfe, 0x2f, 0xea, 0x2b, 0x49, 0xd9, 0x21,
	0xc4, 0xbb, 0x41, 0x9d, 0x64, 0xf3, 0xff, 0x4f, 0xd0, 0x2e, 0x8c, 0x46, 0xa7, 0xc5, 0x62, 0xb6,
	0x9d, 0x37, 0x76, 0x0c, 0x6d, 0x1e, 0xac, 0xd6, 0x03, 0x40, 0x6d, 0x26, 0xcb, 0xef, 0x9a, 0x9c,
	0x3f, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x41, 0x0f, 0xc1, 0x30, 0xe8, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PhotoServiceClient is the client API for PhotoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PhotoServiceClient interface {
	TotalPhotos(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TotalPhotosResponse, error)
	AllPhotos(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AllPhotosResponse, error)
	Photo(ctx context.Context, in *PhotoRequest, opts ...grpc.CallOption) (*PhotoResponse, error)
	PostPhoto(ctx context.Context, in *PostPhotoRequest, opts ...grpc.CallOption) (*PhotoResponse, error)
	TagPhoto(ctx context.Context, in *TagPhotoRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type photoServiceClient struct {
	cc *grpc.ClientConn
}

func NewPhotoServiceClient(cc *grpc.ClientConn) PhotoServiceClient {
	return &photoServiceClient{cc}
}

func (c *photoServiceClient) TotalPhotos(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TotalPhotosResponse, error) {
	out := new(TotalPhotosResponse)
	err := c.cc.Invoke(ctx, "/photo.PhotoService/TotalPhotos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoServiceClient) AllPhotos(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AllPhotosResponse, error) {
	out := new(AllPhotosResponse)
	err := c.cc.Invoke(ctx, "/photo.PhotoService/AllPhotos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoServiceClient) Photo(ctx context.Context, in *PhotoRequest, opts ...grpc.CallOption) (*PhotoResponse, error) {
	out := new(PhotoResponse)
	err := c.cc.Invoke(ctx, "/photo.PhotoService/Photo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoServiceClient) PostPhoto(ctx context.Context, in *PostPhotoRequest, opts ...grpc.CallOption) (*PhotoResponse, error) {
	out := new(PhotoResponse)
	err := c.cc.Invoke(ctx, "/photo.PhotoService/PostPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoServiceClient) TagPhoto(ctx context.Context, in *TagPhotoRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/photo.PhotoService/TagPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhotoServiceServer is the server API for PhotoService service.
type PhotoServiceServer interface {
	TotalPhotos(context.Context, *empty.Empty) (*TotalPhotosResponse, error)
	AllPhotos(context.Context, *empty.Empty) (*AllPhotosResponse, error)
	Photo(context.Context, *PhotoRequest) (*PhotoResponse, error)
	PostPhoto(context.Context, *PostPhotoRequest) (*PhotoResponse, error)
	TagPhoto(context.Context, *TagPhotoRequest) (*empty.Empty, error)
}

func RegisterPhotoServiceServer(s *grpc.Server, srv PhotoServiceServer) {
	s.RegisterService(&_PhotoService_serviceDesc, srv)
}

func _PhotoService_TotalPhotos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoServiceServer).TotalPhotos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photo.PhotoService/TotalPhotos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoServiceServer).TotalPhotos(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoService_AllPhotos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoServiceServer).AllPhotos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photo.PhotoService/AllPhotos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoServiceServer).AllPhotos(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoService_Photo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhotoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoServiceServer).Photo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photo.PhotoService/Photo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoServiceServer).Photo(ctx, req.(*PhotoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoService_PostPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostPhotoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoServiceServer).PostPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photo.PhotoService/PostPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoServiceServer).PostPhoto(ctx, req.(*PostPhotoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoService_TagPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagPhotoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoServiceServer).TagPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photo.PhotoService/TagPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoServiceServer).TagPhoto(ctx, req.(*TagPhotoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PhotoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "photo.PhotoService",
	HandlerType: (*PhotoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TotalPhotos",
			Handler:    _PhotoService_TotalPhotos_Handler,
		},
		{
			MethodName: "AllPhotos",
			Handler:    _PhotoService_AllPhotos_Handler,
		},
		{
			MethodName: "Photo",
			Handler:    _PhotoService_Photo_Handler,
		},
		{
			MethodName: "PostPhoto",
			Handler:    _PhotoService_PostPhoto_Handler,
		},
		{
			MethodName: "TagPhoto",
			Handler:    _PhotoService_TagPhoto_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/photo_share/proto/photo/photo.proto",
}
